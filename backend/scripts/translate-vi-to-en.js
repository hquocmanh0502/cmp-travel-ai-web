// Script to translate Vietnamese to English in all HTML files
const fs = require('fs');
const path = require('path');

const translations = {
  // Dropdown menu
  'Xin ch√†o': 'Hello',
  'Th√¥ng tin c√° nh√¢n': 'Profile',
  'ƒê∆°n ƒë·∫∑t tour': 'My Bookings',
  'Danh s√°ch y√™u th√≠ch': 'Wishlist',
  'L·ªãch s·ª≠ du l·ªãch': 'Travel History',
  'T√πy ch·ªçn AI': 'AI Preferences',
  'ƒêƒÉng xu·∫•t': 'Logout',
  
  // Chatbot
  'Xin ch√†o! T√¥i l√† tr·ª£ l√Ω AI c·ªßa CMP Travel. T√¥i c√≥ th·ªÉ gi√∫p b·∫°n t√¨m tour ph√π h·ª£p, t∆∞ v·∫•n gi√° c·∫£ v√† h·ªó tr·ª£ ƒë·∫∑t tour. B·∫°n c·∫ßn h·ªó tr·ª£ g√¨?': 
    'Hello! I am CMP Travel\'s AI assistant. I can help you find suitable tours, advise on pricing, and assist with tour bookings. How can I help you?',
  
  // Common buttons and labels
  'T√¨m ki·∫øm': 'Search',
  'ƒê·∫∑t ngay': 'Book Now',
  'Xem th√™m': 'View More',
  'Chi ti·∫øt': 'Details',
  'Li√™n h·ªá': 'Contact',
  'G·ª≠i': 'Send',
  'H·ªßy': 'Cancel',
  'ƒê√≥ng': 'Close',
  'L∆∞u': 'Save',
  'Ch·ªânh s·ª≠a': 'Edit',
  'X√≥a': 'Delete',
  'Th√™m': 'Add',
  
  // Notifications
  'ƒêƒÉng xu·∫•t th√†nh c√¥ng!': 'Logged out successfully!',
  'ƒêƒÉng nh·∫≠p th√†nh c√¥ng!': 'Logged in successfully!',
  'B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën ƒëƒÉng xu·∫•t?': 'Are you sure you want to logout?',
  
  // Other common phrases
  'Kh√¥ng th·ªÉ t·∫£i': 'Cannot load',
  'ƒêang t·∫£i': 'Loading',
  'Vui l√≤ng': 'Please',
  'C·∫£m ∆°n': 'Thank you'
};

function translateFile(filePath) {
  try {
    let content = fs.readFileSync(filePath, 'utf8');
    let modified = false;
    
    // Replace each translation
    for (const [vietnamese, english] of Object.entries(translations)) {
      const regex = new RegExp(vietnamese.replace(/[.*+?^${}()|[\]\\]/g, '\\$&'), 'g');
      if (content.includes(vietnamese)) {
        content = content.replace(regex, english);
        modified = true;
        console.log(`‚úÖ ${path.basename(filePath)}: "${vietnamese}" ‚Üí "${english}"`);
      }
    }
    
    if (modified) {
      fs.writeFileSync(filePath, content, 'utf8');
      return true;
    }
    return false;
  } catch (error) {
    console.error(`‚ùå Error processing ${filePath}:`, error.message);
    return false;
  }
}

function translateDirectory(dirPath) {
  const files = fs.readdirSync(dirPath);
  let totalModified = 0;
  
  files.forEach(file => {
    const filePath = path.join(dirPath, file);
    const stat = fs.statSync(filePath);
    
    if (stat.isDirectory()) {
      // Skip node_modules and other unnecessary directories
      if (!['node_modules', '.git', 'images'].includes(file)) {
        totalModified += translateDirectory(filePath);
      }
    } else if (file.endsWith('.html')) {
      if (translateFile(filePath)) {
        totalModified++;
      }
    }
  });
  
  return totalModified;
}

// Start translation
console.log('üåê Starting Vietnamese to English translation...\n');
const frontendPath = path.join(__dirname, '..', '..', 'frontend');
const modifiedCount = translateDirectory(frontendPath);
console.log(`\n‚úÖ Translation complete! Modified ${modifiedCount} files.`);
